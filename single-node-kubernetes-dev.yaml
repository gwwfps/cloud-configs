#cloud-config

---
hostname: k8svagrant
coreos:
  etcd2:
    name: master
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    advertise-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial-cluster-token: k8s_etcd
    listen-peer-urls: http://0.0.0.0:2380,http://0.0.0.0:7001
    initial-advertise-peer-urls: http://0.0.0.0:2380
    initial-cluster: master=http://0.0.0.0:2380
    initial-cluster-state: new
  units:
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
    - name: flanneld.service
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "10.2.0.0/16" }'
      command: start
    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Requires=flanneld.service
        After=flanneld.service
        [Service]
        ExecStart=/usr/bin/kubelet \
          --api_servers=http://127.0.0.1:8080 \
          --register-node=true \
          --allow-privileged=true \
          --config=/etc/kubernetes/manifests \
          --hostname-override=127.0.0.1 \
          --cluster_dns=10.3.0.10 \
          --cluster_domain=cluster.local \
          --cadvisor-port=0
        Restart=always
        RestartSec=3
        [Install]
        WantedBy=multi-user.target
write_files:
  - path: /etc/kubernetes/manifests/kube-apiserver.yaml
    permissions: 0644
    owner: root:root
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-apiserver
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-apiserver
          image: gcr.io/google_containers/hyperkube:v1.0.6
          command:
          - /hyperkube
          - apiserver
          - --insecure-bind-address=0.0.0.0
          - --etcd_servers=http://127.0.0.1:4001
          - --allow-privileged=true
          - --service-cluster-ip-range=10.3.0.0/24
          ports:
          - containerPort: 8080
            hostPort: 8080
            name: local
  - path: /etc/kubernetes/manifests/kube-proxy.yaml
    permissions: 0644
    owner: root:root
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-proxy
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-proxy
          image: gcr.io/google_containers/hyperkube:v1.0.6
          command:
          - /hyperkube
          - proxy
          - --master=http://127.0.0.1:8080
          securityContext:
            privileged: true
  - path: /etc/kubernetes/manifests/kube-podmaster.yaml
    permissions: 0644
    owner: root:root
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-podmaster
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: scheduler-elector
          image: gcr.io/google_containers/podmaster:1.1
          command:
          - /podmaster
          - --etcd-servers=http://127.0.0.1:4001
          - --key=scheduler
          - --source-file=/src/manifests/kube-scheduler.yaml
          - --dest-file=/dst/manifests/kube-scheduler.yaml
          volumeMounts:
          - mountPath: /src/manifests
            name: manifest-src
            readOnly: true
          - mountPath: /dst/manifests
            name: manifest-dst
        - name: controller-manager-elector
          image: gcr.io/google_containers/podmaster:1.1
          command:
          - /podmaster
          - --etcd-servers=http://127.0.0.1:4001
          - --key=controller
          - --source-file=/src/manifests/kube-controller-manager.yaml
          - --dest-file=/dst/manifests/kube-controller-manager.yaml
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /src/manifests
            name: manifest-src
            readOnly: true
          - mountPath: /dst/manifests
            name: manifest-dst
        volumes:
        - hostPath:
            path: /srv/kubernetes/manifests
          name: manifest-src
        - hostPath:
            path: /etc/kubernetes/manifests
          name: manifest-dst
  - path: /srv/kubernetes/manifests/kube-controller-manager.yaml
    permissions: 0644
    owner: root:root
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-controller-manager
        namespace: kube-system
      spec:
        containers:
        - name: kube-controller-manager
          image: gcr.io/google_containers/hyperkube:v1.0.6
          command:
          - /hyperkube
          - controller-manager
          - --master=http://127.0.0.1:8080
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10252
            initialDelaySeconds: 15
            timeoutSeconds: 1
        hostNetwork: true
  - path: /srv/kubernetes/manifests/kube-scheduler.yaml
    permissions: 0644
    owner: root:root
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-scheduler
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-scheduler
          image: gcr.io/google_containers/hyperkube:v1.0.6
          command:
          - /hyperkube
          - scheduler
          - --master=http://127.0.0.1:8080
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10251
            initialDelaySeconds: 15
            timeoutSeconds: 1
  - path: /srv/kubernetes/manifests/kube-system-namespace.yaml
    permissions: 0644
    owner: root:root
    content: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: kube-system

